/****** Script de la commande SelectTopNRows à partir de SSMS  ******/
DROP PRocedure sp_import_excel 
GO 

CREATE PROCEDURE sp_import_excel
@tableName varchar(250),
@IdTypeProto int,
@creator int
AS 
BEGIN

DECLARE @datenow DATETIME = SYSDATETIME()
DECLARE @importid VARCHAR(50) 
DECLARE @nbInserted INT
DECLARE @nbTotal INT
SET @importid  = 'import_excel-' + CONVERT(varchar(50), @datenow, 121)

DECLARE @req nvarchar(max) 
SET @req = '' 

IF object_id('tempdb..#TstationsImport') IS NOT NULL
			DROP TABLE #TstationsImport
		CREATE TABLE #TstationsImport (
		[StationDate] [datetime] NOT NULL,
		[Name] [nvarchar](255) NULL,
		[LAT] [numeric](9, 5) NULL,
		[LON] [numeric](9, 5) NULL,
		[ELE] [int] NULL,
		[precision] [int] NULL,
		--[fieldActivityId] [int] NULL,
		[creator] [int] NULL,
		[creationDate] [datetime] NULL,
		[FK_StationType] [int] NULL,
		[Place] [varchar](250) NULL,
		--[FK_MonitoredSite] [int] NULL,
		[original_id] [varchar](100) NULL,
		[Comments] [varchar](250) NULL,
		)
		
		
SET @req = @req+'

SELECT
	[Station_Date]
   ,[Station_Name]
   ,[Station_LAT]
   ,[Station_LON]
   ,max([Station_ELE])
   ,max([Station_precision])
   ,'+CONVERT(varchar,@creator)+'
   ,GETDATE()
   ,1
   ,NULL
   ,'''+@tableName+'_''+CONVERT(varchar,min([index]))
   ,max([Station_Comments])
FROM '+@tableName+' AS t_imp

WHERE NOT EXISTS (
	SELECT * FROM [dbo].[Station] AS t_sta
	WHERE t_sta.[StationDate] = t_imp.[Station_Date]
	AND t_sta.[LAT] = t_imp.[Station_LAT]
	AND t_sta.[LON] = t_imp.[Station_LON]
) 
GROUP by [Station_Date]
   ,[Station_Name]
   ,[Station_LAT]
   ,[Station_LON]
'
select @req
INSERT INTO #TstationsImport
execute(@Req)

select *
FROM #TstationsImport

Create TABLE #insertedStations
		(ID INT,
		[Name] [nvarchar](255) NULL,
		[StationDate] [datetime] NOT NULL,
		[LAT] [numeric](9, 5) NULL,
		[LON] [numeric](9, 5) NULL,)

INSERT INTO [dbo].[Station]
(
	   [StationDate]
      ,[Name]
      ,[LAT]
      ,[LON]
      ,[ELE]
      ,[precision]
      ,[creator]
      ,[creationDate]
      ,[FK_StationType]
	  ,Place
      ,[original_id]
      ,[Comments] 
)
OUTPUT inserted.ID,inserted.Name,inserted.StationDate,inserted.LAT,inserted.LON INTO #insertedStations
SELECT
	[StationDate],
		[Name],
		[LAT],
		[LON],
		[ELE],
		[precision],
		--[fieldActivityId],
		[creator],
		[creationDate],
		[FK_StationType],
		[Place],
		--[FK_MonitoredSite] [int] NULL,
		[original_id],
		[Comments]
FROM #TstationsImport


/* nb inserted stations */
set @nbInserted = (SELECT count (*) FROM #TstationsImport)

PRINT  ' nb inserted stations : '

PRINT  @nbInserted




/**** INsert observation  ***/ 

	-- TODO gérer les individu (ID ou bague) 
	-- TODO géré les champs thesauraux 
	-- TODO gerer les retour 

		IF object_id('tempdb..#ProtValeur') IS NOT NULL
			DROP TABLE #ProtValeur
		CREATE TABLE #ProtValeur (FK_Station int,orginal_ID Varchar(250),ValName VARCHAR(250),Valeur VARCHAR(1000),FK_Indiv INT,comments varchar(255))


		SET @Req = '@Debut'
	
		SELECT @Req = @Req + 'union all ' + + char(13) + ' select ''' + O.Name + ''',convert(varchar(1000),P.[' + S_C.name + '])  ' 
		FROM ObservationDynProp O 
		JOIN ProtocoleType_ObservationDynProp PTO ON PTO.FK_ObservationDynProp = O.ID AND PTO.FK_ProtocoleType = @IdTypeProto

		JOIN dbo.sysobjects S_O on s_o.name =@tableName --AND s_o.type != NULL
		JOIN dbo.syscolumns S_C on o.Name = S_C.name and S_C.id = S_o.id
		SET @Req = replace(@Req,'@Debutunion all','');

		select @req

		SET @req = 'SELECT ISta.ID as Sta_ID,'''+@tableName+'_''+CONVERT(Varchar,P.[index]),ValName,Valeur,NULL,P.Comments FROM ' + @TableName + ' P 
					JOIN #insertedStations ISta 
						ON ISta.StationDate = P.Station_Date AND ISta.LAT = P.Station_LAT AND ISta.LON = P.Station_LON AND P.Station_Name = ISta.Name
					
					cross apply(' + @Req + ') c (ValName,Valeur)'
		SET @req = replace(@req,'cross apply(@debut)','cross apply(Select ''none'' ,NULL)')

		select @Req;

		INSERT INTO #ProtValeur
		execute(@Req)


		IF object_id('tempdb..##InsertedObs') IS NOT NULL
			DROP TABLE #InsertedObs
		CREATE TABLE #InsertedObs (fk_obs INT,original_id varchar(250),creationDate DATETIME)
		

		INSERT INTO [dbo].[Observation]
			   ([FK_ProtocoleType]
			   ,[FK_Station]
			   ,[creationDate]
			   ,[Parent_Observation]
			   ,[FK_Individual]
			   ,Original_ID
			   ,comments)
			   OUTPUT inserted.ID, inserted.original_id,inserted.creationDate into #InsertedObs
		select DISTINCT @IdTypeProto,
		s.id,S.StationDate,NULL,V.FK_Indiv, V.orginal_ID,v.comments
		from #ProtValeur V 
		--JOIN ObservationDynProp O on V.ValName = o.Name 
		JOIN Station S on V.FK_Station = S.ID

		
		INSERT INTO ObservationDynPropValue (
			StartDate,
			ValueString,
			ValueDate,
			ValueFloat,
			ValueInt,
			FK_Observation,
			FK_ObservationDynProp)
		SELECT 
		GETDATE(),
		CASE WHEN dp.TypeProp = 'String' THEN V.Valeur ELSE NULL END,
		CASE WHEN dp.TypeProp like '%Date%' THEN V.Valeur ELSE NULL END,
		CASE WHEN dp.TypeProp = 'Float' THEN V.Valeur ELSE NULL END,
		CASE WHEN dp.TypeProp = 'Integer' THEN V.Valeur ELSE NULL END,
		o.ID,
		dp.ID
		FROM #ProtValeur V
		JOIN Observation o ON o.original_id = V.orginal_ID
		JOIN ObservationDynProp dp ON dp.Name = V.ValName

END