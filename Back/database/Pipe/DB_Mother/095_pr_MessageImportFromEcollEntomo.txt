
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [dbo].[pr_MessageImportFromEcollEntomo] as 


/*********** Indentification de split lié a une Obs ERD  ************/
IF OBJECT_ID('tempdb..#tempSplitObsID') IS NOT NULL 
	DROP TABLE #tempSplitObsID

IF OBJECT_ID('tempdb..#tempOBsIDToUpDate') IS NOT NULL 
	DROP TABLE #tempOBsIDToUpDate


SELECT DIStinct o.ID,m.pk_MessageReceived,o.Parent_Observation
INTO #tempSplitObsID
FROM TMessageReceived m
JOIN Observation o ON m.ObjectOriginalID = dbo.GetProvenance()+'_'+CONVERT(Varchar,o.ID)
WHERE EXISTS ( SELECT * 
				FROM TMessageReceived m2 
				WHERE m.ObjectOriginalID = m2.ObjectOriginalID and m.pk_MessageReceived !=m2.pk_MessageReceived 
				and m.Provenance = m2.Provenance and m2.ImportDate is null AND m.CreationDate = m2.CreationDate)
AND NOT EXISTS (SELECT * FROM TMessageReceived m3 
				WHERE m.CreationDate < m3.CreationDate and m3.ObjectId = m.ObjectId 
				and m.Provenance = m3.Provenance AND m.pk_MessageReceived !=m3.pk_MessageReceived 
				AND o.original_id = m.Provenance+'_'+CONVERT(Varchar,m.ObjectId)
				) 
AND m.ImportDate is null

--select * 
--FROM #tempSplitObsID
--select * 
--FROM #tempOBsIDToUpDate

--- on extrait un seul message	pour le mettre dans la pile d'observation a mettre à jour (fait plus bas)---
select ID,Min(pk_MessageReceived) as pk_MessageReceived
INTO #tempOBsIDToUpDate 
from #tempSplitObsID
GROUP by ID

DELETE t 
FROM #tempSplitObsID t
JOIN #tempOBsIDToUpDate u ON t.pk_MessageReceived = u.pk_MessageReceived

---- On traite les sample splité, creation de nouvelles Observations ----
INSERT INTO Observation (
	creationDate,
	FK_ProtocoleType,
	Parent_Observation,
	FK_Station,
	FK_Individual,
	original_id)
SELECT GETDATE(),o.FK_ProtocoleType,o.Parent_Observation,o.FK_Station,NULL,m.Provenance+'_'+CONVERT(Varchar,m.ObjectId)
FROM TMessageReceived m 
JOIN #tempSplitObsID spl ON m.pk_MessageReceived = spl.pk_MessageReceived
JOIN Observation o on o.ID = spl.ID 
	AND NOT EXISTS (SELECT * 
					FROM Observation o2 
					WHERE o2.original_id = m.Provenance+'_'+CONVERT(Varchar,m.ObjectId))
 
INSERT INTO ObservationDynPropValue ( [StartDate]
           ,[ValueInt]
           ,[ValueFloat]
		   ,[ValueString]
           ,[FK_ObservationDynProp]
           ,[FK_Observation])
SELECT GETDATE(),
CASE WHEN dp.TypeProp ='Integer' THEN CONVERT(int,md.PropValue) ELSE NULL END,
CASE WHEN   dp.TypeProp ='Float' THEN CONVERT(decimal,md.PropValue)  ELSE NULL END,
CASE WHEN   dp.TypeProp ='String' THEN md.PropValue ELSE NULL END,
dp.ID,
o.ID
FROM Observation o 
JOIN TMessageReceived m ON m.Provenance+'_'+CONVERT(varchar,m.ObjectId) = o.original_id
JOIN TMessageReceivedDetail md ON md.fk_MessageReceived = m.pk_MessageReceived AND md.Provenance = m.Provenance
LEFT JOIN TMessageDynPropvsEcollEntomo corresp ON corresp.EcollName = md.PropName 
JOIN ObservationDynProp dp ON dp.Name = ISNULL(corresp.ERDName,md.PropName) 
WHERE m.pk_MessageReceived in (SELECT pk_MessageReceived FROM #tempSplitObsID) 
AND NOT EXISTS (SELECT * FROM ObservationDynPropValue v2 WHERE v2.FK_Observation = o.ID)

UNION ALL 

SELECT  GETDATE(),1,NULL,NULL,(SELECT ID FROM ObservationDynProp WHERE Name = 'sampled'),o.ID
FROM Observation o 
JOIN TMessageReceived m ON m.Provenance+'_'+CONVERT(varchar,m.ObjectId) = o.original_id
WHERE m.pk_MessageReceived in (SELECT pk_MessageReceived FROM #tempSplitObsID) 
AND NOT EXISTS (SELECT * FROM ObservationDynPropValue v2 WHERE v2.FK_Observation = o.ID)
				

/*********** Indentification de msg non split lié a une Obs ERD  ************/
--IF OBJECT_ID('tempdb..#tempOBsIDToUpDate') IS NOT NULL 
--	DROP TABLE #tempOBsIDToUpDate

INSERT INTO #tempOBsIDToUpDate
SELECT Distinct o.ID,m.pk_MessageReceived
FROM TMessageReceived m
JOIN Observation o ON m.ObjectOriginalID = dbo.GetProvenance()+'_'+CONVERT(Varchar,o.ID)
WHERE o.ID not in (SELECT ID FROM #tempSplitObsID) 
AND NOT EXISTS (SELECT * FROM TMessageReceived m3 
				WHERE m.CreationDate < m3.CreationDate and m3.ObjectId = m.ObjectId ) 
AND m.ImportDate is null 

select * FROM #tempOBsIDToUpDate
select * FROM #tempSplitObsID

INSERT INTO ObservationDynPropValue ( [StartDate]
           ,[ValueInt]
           ,[ValueFloat]
		   ,[ValueString]
           ,[FK_ObservationDynProp]
           ,[FK_Observation])
SELECT GETDATE(),
CASE WHEN dp.TypeProp ='Integer' THEN CONVERT(int,md.PropValue) ELSE NULL END,
CASE WHEN   dp.TypeProp ='Float' THEN CONVERT(decimal,md.PropValue)  ELSE NULL END,
CASE WHEN   dp.TypeProp ='String' THEN md.PropValue ELSE NULL END,
dp.ID,o.ID
FROM Observation o 
JOIN TMessageReceived m ON m.ObjectOriginalID = dbo.GetProvenance()+'_'+CONVERT(Varchar,o.ID) 
				AND NOT EXISTS (SELECT * FROM TMessageReceived m3 
				WHERE m.CreationDate < m3.CreationDate and m3.ObjectId = m.ObjectId and m.Provenance = m3.Provenance AND m.pk_MessageReceived !=m3.pk_MessageReceived ) 
JOIN TMessageReceivedDetail md ON md.fk_MessageReceived = m.pk_MessageReceived AND md.Provenance = m.Provenance
JOIN #tempOBsIDToUpDate tpo ON tpo.ID = o.ID and tpo.pk_MessageReceived = m.pk_MessageReceived and tpo.pk_MessageReceived = md.fk_MessageReceived
LEFT JOIN TMessageDynPropvsEcollEntomo corresp ON corresp.EcollName = md.PropName 
JOIN ObservationDynProp dp ON dp.Name = ISNULL(corresp.ERDName,md.PropName) 
LEFT JOIN ObservationDynPropValuesNow v ON v.FK_Observation = o.ID AND v.FK_ObservationDynProp = dp.ID
WHERE --o.ID in (SELECT ID FROM #tempOBsIDToUpDate) AND 
CASE WHEN dp.TypeProp = 'String' AND ISNULL( v.ValueString,'') != ISNULL( PropValue,'') THEN 1 
	WHEN dp.TypeProp = 'Float' AND CONVERT(varchar,v.ValueFloat)!= PropValue THEN 1 
	WHEN dp.TypeProp = 'Integer' AND CONVERT(varchar,v.ValueInt) != PropValue THEN 1 ELSE 0 END = 1 

UPDATE m SET ImportDate = GETDATE()
FROM TMessageReceived m 
WHERE m.pk_MessageReceived in (SELECT pk_MessageReceived FROM #tempOBsIDToUpDate
								UNION ALL 
								SELECT pk_MessageReceived FROM #tempSplitObsID
								)
AND Provenance like  'ECOL'


GO





INSERT INTO [dbo].[TVersion] (TVer_FileName,TVer_Date,TVer_DbName) VALUES ('95_pr_MessageImportFromEcollEntomo',GETDATE(),(SELECT db_name()))


GO
