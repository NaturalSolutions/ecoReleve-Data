
---------------------------------------------------------------------------------
-- Stored procedure that will  ### Do something
-- Gets: @file_ID int,
-- Returns: @@result varchar(255)
-- Returns: @error int
---------------------------------------------------------------------------------

IF OBJECT_ID('pr_Update_FieldWorkerName', 'P') IS NOT NULL
DROP PROCEDURE dbo.[pr_Update_FieldWorkerName];
GO 


CREATE PROCEDURE [dbo].[pr_Update_FieldWorkerName]
	@file_ID int,
	@result varchar(255) OUTPUT,
	@error int OUTPUT,
	@errorIndexes varchar(max) OUTPUT
AS
SET NOCOUNT ON

DECLARE @SQL_STATEMENT nvarchar(max),
@iErrorCode_exec int,
@TLogMessage_ID int,
@Creator int,
@ObjectType int,
@TempTable_GUID varchar(250),
@ObjectName varchar(100),
@count int

SET @result='ERROR'

BEGIN TRY

	SELECT 
			@Creator= Creator,
			@TempTable_GUID = TempTable_GUID,
			@ObjectName = ObjectName,
			@ObjectType = ObjectType
	FROM [File] 
	WHERE ID = @file_ID

		IF OBJECT_ID('tempdb..#tempIndexError') IS NOT NULL
		DROP TABLE #tempIndexError

	CREATE TABLE #tempIndexError (
	index_ int
	)

	SET @SQL_STATEMENT = 'UPDATE t SET Station_FieldWorker1 = u1.ID, Station_FieldWorker2 = u2.ID, Station_FieldWorker3 = u3.ID '
	+ ' FROM '+@TempTable_GUID + ' t '	
	+ ' LEFT JOIN [User] u1 ON u1.Login = t.Station_FieldWorker1  AND t.Station_FieldWorker1 IS NOT NULL'
	+ ' LEFT JOIN [User] u2 ON u2.Login = t.Station_FieldWorker2  AND t.Station_FieldWorker2 IS NOT NULL'
	+ ' LEFT JOIN [User] u3 ON u3.Login = t.Station_FieldWorker3  AND t.Station_FieldWorker3 IS NOT NULL'

	EXEC SP_EXECUTESQL @SQL_STATEMENT;

END TRY
BEGIN CATCH
	SET @error = ERROR_NUMBER()

	--recording error log
	SET @SQL_STATEMENT = 'INSERT INTO NSLog.dbo.TLOG_MESSAGES ([JCRE]
      ,[LOG_LEVEL]
      ,[ORIGIN]
      ,[SCOPE]
      ,[LOGUSER]
      ,[DOMAINE]
      ,[MESSAGE_NUMBER]
      ,[LOG_MESSAGE]
      ,[OTHERSINFOS])
	  SELECT 
			GETDATE(),
			5,
			''Import excel protocol'',
			''pr_Update_FieldWorkerName'',
			1,
			3,
			'+CONVERT(VARCHAR(max),@error)+',
			'''+CONVERT(VARCHAR(max),REplace(ERROR_MESSAGE(),'''',''))+''',
			''@file_ID =  ''+CONVERT(VARCHAR,' +CONVERT(VARCHAR,@file_ID)+')'
			
			--SELECT @TLogMessage_ID = SCOPE_IDENTITY()	'				
			
	EXEC SP_EXECUTESQL @SQL_STATEMENT
					
END CATCH;

IF @@ERROR <> 0
	BEGIN
		SET @error = @@ERROR
	END
IF @error <> 0
    BEGIN
		PRINT 'ErrorCode = '+str(@error)
    END
ELSE
    BEGIN
		SET @result = 'OK'
    END
SELECT  @result,  @error, @errorIndexes


GO


INSERT INTO [dbo].[TVersion] (TVer_FileName,TVer_Date,TVer_DbName) VALUES ('114_ImportExcel_pr_Update_FieldWorkerName',GETDATE(),(SELECT db_name()))


GO
