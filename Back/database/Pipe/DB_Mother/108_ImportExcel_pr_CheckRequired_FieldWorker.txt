
---------------------------------------------------------------------------------
-- Stored procedure that will  ### Do something
-- Gets: @file_ID int,
-- Returns: @@result varchar(255)
-- Returns: @error int
---------------------------------------------------------------------------------

IF OBJECT_ID('pr_CheckRequired_FieldWorker', 'P') IS NOT NULL
DROP PROCEDURE dbo.[pr_CheckRequired_FieldWorker];
GO 


CREATE PROCEDURE [dbo].[pr_CheckRequired_FieldWorker]
	@file_ID int,
	@result varchar(255) OUTPUT,
	@error int OUTPUT,
	@errorIndexes varchar(max) OUTPUT
AS
SET NOCOUNT ON

DECLARE @SQL_STATEMENT nvarchar(max),
@iErrorCode_exec int,
@TLogMessage_ID int,
@Creator int,
@ObjectType int,
@TempTable_GUID varchar(250),
@ObjectName varchar(100),
@count int

SET @result='ERROR'

BEGIN TRY

	SELECT 
			@Creator= Creator,
			@TempTable_GUID = TempTable_GUID,
			@ObjectName = ObjectName,
			@ObjectType = ObjectType
	FROM [File] 
	WHERE ID = @file_ID

		IF OBJECT_ID('tempdb..#tempIndexError') IS NOT NULL
		DROP TABLE #tempIndexError

	CREATE TABLE #tempIndexError (
	index_ int
	)

	SET @SQL_STATEMENT = 'SELECT [index] FROM '+@TempTable_GUID 	
	+' WHERE Station_FieldWorker1 is null AND 
		Station_FieldWorker2 is null AND
		Station_FieldWorker3 is null'
	
	INSERT INTO #tempIndexError
	EXEC SP_EXECUTESQL @SQL_STATEMENT;

	IF (SELECT COUNT(*) FROM #tempIndexError) > 0 
		BEGIN 
			SET @error = 1
			SET @errorIndexes = '@'
			SELECT @errorIndexes = @errorIndexes + ', '+CONVERT(VARCHAR(100),index_)
			FROM #tempIndexError

			SET @errorIndexes = REPLACE(@errorIndexes,'@, ','')
		END

	


END TRY
BEGIN CATCH
	SET @error = ERROR_NUMBER()

	--recording error log
	SET @SQL_STATEMENT = 'INSERT INTO NSLog.dbo.TLOG_MESSAGES ([JCRE]
      ,[LOG_LEVEL]
      ,[ORIGIN]
      ,[SCOPE]
      ,[LOGUSER]
      ,[DOMAINE]
      ,[MESSAGE_NUMBER]
      ,[LOG_MESSAGE]
      ,[OTHERSINFOS])
	  SELECT 
			GETDATE(),
			5,
			''Import excel protocol'',
			''pr_CheckRequired_FieldWorker'',
			1,
			3,
			'+CONVERT(VARCHAR(max),@error)+',
			'''+CONVERT(VARCHAR(max),REplace(ERROR_MESSAGE(),'''',''))+''',
			''@file_ID =  ''+CONVERT(VARCHAR,' +CONVERT(VARCHAR,@file_ID)+')'
			
			--SELECT @TLogMessage_ID = SCOPE_IDENTITY()	'				
			
	EXEC SP_EXECUTESQL @SQL_STATEMENT
					
END CATCH;

IF @@ERROR <> 0
	BEGIN
		SET @error = @@ERROR
	END
IF @error <> 0
    BEGIN
		PRINT 'ErrorCode = '+str(@error)
    END
ELSE
    BEGIN
		SET @result = 'OK'
    END
SELECT  @result,  @error, @errorIndexes


GO


INSERT INTO [dbo].[TVersion] (TVer_FileName,TVer_Date,TVer_DbName) VALUES ('108_ImportExcel_pr_CheckRequired_FieldWorker',GETDATE(),(SELECT db_name()))


GO
